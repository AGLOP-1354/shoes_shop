{"version":3,"sources":["data.js","cart.js","App.js","serviceWorkerRegistration.js","index.js"],"names":["id","title","content","price","img","connect","state","reducer","alert닫기","reducer2","props","className","style","background","padding","margin","onClick","dispatch","type","Table","responsive","map","a","i","name","quan","Detail","lazy","Card","src","width","to","shoes","App","useState","Data","shoes변경","재고","재고변경","Navbar","bg","expand","Brand","href","Toggle","aria-controls","Collapse","Nav","Link","as","NavDropdown","Item","Divider","exact","path","Jumbotron","Button","variant","axios","get","then","result","data","catch","fallback","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","error","기본state","store","createStore","combineReducers","액션","found","findIndex","payload","copy","push","ReactDOM","render","StrictMode","document","getElementById","URL","process","origin","addEventListener","fetch","headers","response","contentType","status","indexOf","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.ebab9336.chunk.js","sourcesContent":["export default[\r\n    {\r\n      id : 0,\r\n      title : \"White and Black\",\r\n      content : \"Born in France\",\r\n      price : 120000,\r\n      img : \"https://codingapple1.github.io/shop/shoes1.jpg\"\r\n    },\r\n  \r\n    {\r\n      id : 1,\r\n      title : \"Red Knit\",\r\n      content : \"Born in Seoul\",\r\n      price : 110000,\r\n      img : \"https://codingapple1.github.io/shop/shoes2.jpg\"\r\n    },\r\n  \r\n    {\r\n      id : 2,\r\n      title : \"Grey Yordan\",\r\n      content : \"Born in the States\",\r\n      price : 130000,\r\n      img : \"https://codingapple1.github.io/shop/shoes3.jpg\"\r\n    }\r\n  ] ","import React from 'react';\r\nimport {Table} from 'react-bootstrap';\r\nimport { connect } from 'react-redux';\r\n\r\nfunction Cart(props){\r\n    return (\r\n      <div>\r\n          {\r\n            props.alert닫기 === true\r\n            ?  <div className=\".alert\" style={{background:\"#eee\", padding:\"20px\", margin:\"20px\"}}>지금 구매하시면 신규회원20% <br/>\r\n                <button onClick={()=>{ props.dispatch({ type : 'alert닫기'}) }}>닫기</button>\r\n                </div>\r\n            : null  \r\n        }\r\n        <Table responsive>\r\n          <tr>\r\n            <th>#</th>\r\n            <th>상품명</th>\r\n            <th>수량</th>\r\n            <th>변경</th>\r\n          </tr>\r\n          { props.state.map((a,i)=>{\r\n            return (\r\n            <tr key={i}>\r\n              <td>{a.id}</td>\r\n              <td>{a.name}</td>\r\n              <td>{a.quan}</td>\r\n              <td><button onClick={()=>{ props.dispatch({ type : '수량증가' }) }}> + </button>\r\n                  <button onClick={()=>{ props.dispatch({ type : '수량감소' }) }}> - </button></td>\r\n            </tr>\r\n            )\r\n          })  }\r\n        </Table>\r\n      </div>\r\n    )\r\n  }\r\n\r\n\r\nfunction 함수명(state){\r\n return{\r\n     state : state.reducer,\r\n     alert닫기 : state.reducer2\r\n }\r\n}\r\n\r\nexport default connect(함수명)(Cart)\r\n//export default Cart;","/* eslint-disable */\nimport React, {useState, lazy, Suspense} from 'react';\nimport { Navbar,Nav,NavDropdown,Button,Jumbotron } from 'react-bootstrap';\nimport './App.css';\nimport Data from './data.js';\nlet Detail = lazy(()=> import('./Detail.js'));\n//import Detail from './Deatil.js';\nimport axios from 'axios';\nimport Cart from './cart.js';\n\nimport { Link, Route, Switch } from 'react-router-dom';\n\n\n\nfunction App() {\n\n  let [shoes, shoes변경] = useState(Data);\n  let [재고, 재고변경] = useState([10,11,12]);\n\n\n  return (\n    <div className=\"App\">\n\n      <Navbar bg=\"light\" expand=\"lg\">\n        <Navbar.Brand href=\"#home\">ShoeShop</Navbar.Brand>\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n        <Navbar.Collapse id=\"basic-navbar-nav\">\n          <Nav className=\"ml-auto\">\n            <Nav.Link as={Link} to=\"/\">Home</Nav.Link>\n            <Nav.Link as={Link} to=\"/detail\">Detail</Nav.Link>\n            <NavDropdown title=\"Dropdown\" id=\"basic-nav-dropdown\">\n              <NavDropdown.Item href=\"#action/3.1\">Action</NavDropdown.Item>\n              <NavDropdown.Item href=\"#action/3.2\">Another action</NavDropdown.Item>\n              <NavDropdown.Item href=\"#action/3.3\">Something</NavDropdown.Item>\n              <NavDropdown.Divider />\n              <NavDropdown.Item href=\"#action/3.4\">Separated link</NavDropdown.Item>\n            </NavDropdown>\n          </Nav>\n        </Navbar.Collapse>\n      </Navbar>\n\n    <Switch>\n\n    <Route exact path=\"/\">\n\n    <Jumbotron className=\"bg\">\n      <h1>20% Season OFF</h1>\n      <p>\n        This is a simple hero unit, a simple jumbotron-style component for calling\n        extra attention to featured content or information.\n      </p>\n      <p>\n        <Button variant=\"primary\">Learn more</Button>\n      </p>\n    </Jumbotron>\n\n    <div className=\"container\">\n      <div className=\"row\">\n        {\n          shoes.map((a, i)=>{\n          return <Card shoes={ shoes[i] } i={i+1} key={i} />\n            })\n        }\n      </div>\n      <button className=\"btn btn-primary\" onClick={()=>{\n\n        axios.get('https://codingapple1.github.io/shop/data2.json')\n        .then((result)=>{ \n           shoes변경([ ...shoes, ...result.data ])\n         })\n        .catch(()=>{  })\n\n     }}>더보기</button>\n    </div>\n\n    </Route>\n\n\n    <Route path=\"/detail/:id\">\n      <Suspense fallback={<div>로딩중입니다</div>}>\n        <Detail shoes={ shoes }  재고={재고} 재고변경={재고변경}/>\n      </Suspense>\n    </Route>\n\n     <Route path=\"/cart\">\n        <Cart />\n     </Route>\n\n    </Switch>\n\n    </div>\n  );\n}\n\n\n\n\nfunction Card(props){\n  return(\n      <div className=\"col-md-4\">\n        <img src={ \"https://codingapple1.github.io/shop/shoes\" + props.i + \".jpg\" } width=\"100%\" />\n        <h4><Link className=\"item-link\" to={'/detail/' + (props.i-1) }>{ props.shoes.title }</Link></h4>\n        <p>{ props.shoes.content } & { props.shoes.price }</p>\n      </div>\n  )\n}\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom';\nimport {Provider} from 'react-redux';\nimport { combineReducers, createStore } from 'redux';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nlet 기본state = [\n]\nlet alert초기값 = true;\n\nfunction reducer(state = 기본state, 액션){\n  if(액션.type === '항목추가'){\n\n    let found = state.findIndex((a)=>{ return a.id === 액션.payload.id });\n\n    if(found >= 0){\n\n      let copy = [...state];\n      copy[found].quan++;\n      return copy;\n\n    }else{\n\n    let copy = [...state];\n    copy.push(액션.payload);\n    return copy;\n    }\n\n  }else if (액션.type == '수량증가' ){\n\n    let copy = [...state];\n    copy[0].quan++;\n    return copy;\n  }else if (액션.type == '수량감소' ){\n\n    let copy = [...state];\n    copy[0].quan--;\n    return copy;\n  }else {\n  return state;\n}\n\n}\n\nfunction reducer2(state = alert초기값, 액션){\n  if(액션.type === 'alert닫기'){\n    return false\n  }else {\n  return state\n}}\n\n\nlet store = createStore(combineReducers({reducer,reducer2}));\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n    <Provider store={store}>\n    <App />\n    </Provider>\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nserviceWorkerRegistration.register();\n"],"sourceRoot":""}